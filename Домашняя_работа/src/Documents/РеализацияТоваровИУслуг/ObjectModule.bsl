Процедура ОбработкаПроведения(Отказ,Режим)
	
	Движения.Товары.Очистить();
	Движения.Товары.Записать();
	
	ТаблицаТовары = Товары.Выгрузить();
	ТаблицаТовары.Свернуть("Номенклатура", "Количество, Сумма");
	
	Движения.Товары.Записывать = Истина;
	Движения.Продажи.Записывать = Истина;
	
	ТипТовар = Перечисления.ТипНоменклатуры.Товар;
	
	Для Каждого ТекСтрокаТовары из ТаблицаТовары Цикл
		
		Если ТекСтрокаТовары.Номенклатура.ТипНоменклатуры = ТипТовар Тогда
			Отбор = Новый Структура;
			Отбор.Вставить("Номенклатура", ТекСтрокаТовары.Номенклатура);
			Остатки = РегистрыНакопления.Товары.Остатки(Дата, Отбор);
			Если Остатки.Количество() = 0 Тогда
				Отказ = Истина;
				Сообщить(СтрШаблон("Данный товар отсутствует на складе: %1", ТекСтрокаТовары.Номенклатура));
				Продолжить;
			КонецЕсли;
			
			СтрокаОстатка = Остатки[0];
			Если СтрокаОстатка.Количество < ТекСтрокаТовары.Количество Тогда
				Отказ = Истина;
				Недостаток = ТекСтрокаТовары.Количество - СтрокаОстатка.Количество;
				Сообщить(СтрШаблон("На складе не хватает: %1, в количестве: %2", ТекСтрокаТовары.Номенклатура, Недостаток));
				Продолжить;
			КонецЕсли;
			
			СуммаКСписанию = 0;
			Если ТекСтрокаТовары.Количество = СтрокаОстатка.Количество Тогда
				СуммаКСписанию = СтрокаОстатка.Сумма;
			Иначе
				СтоимостьЕдиницыТовара = СтрокаОстатка.Сумма / СтрокаОстатка.Количество;
				СуммаКСписанию = СтоимостьЕдиницыТовара * ТекСтрокаТовары.Количество;
			КонецЕсли;
			
			Движение = Движения.Товары.Добавить();
			Движение.Период = Дата;
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
			Движение.Количество = ТекСтрокаТовары.Количество;
			Движение.Сумма = СуммаКСписанию;
			
		КонецЕсли;
		
		Движение = Движения.Продажи.Добавить();
		Движение.Период = Дата;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Сотрудник = Ответственный;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
		
	КонецЦикла;

КонецПроцедуры
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	СуммаДокумента = Товары.Итог("Сумма");
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Ответственный = ПараметрыСеанса.СотрудникТекущегоПользователя;
КонецПроцедуры


